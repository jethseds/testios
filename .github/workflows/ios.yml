name: iOS Release Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test Release Scheme using iOS Simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        env:
          scheme: ${{ secrets.IOS_SCHEME }}  # Specify the scheme name here
          configuration: Release
          platform: ${{ 'iOS Simulator' }}
        run: |
          # Find available device for the simulator
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          
          # Determine if we have a workspace or project
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          
          # Build the scheme for the release configuration
          xcodebuild build -scheme "$scheme" -configuration "$configuration" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: ${{ secrets.IOS_SCHEME }}  # Specify the scheme name here
          configuration: Release
          platform: ${{ 'iOS Simulator' }}
        run: |
          # Find available device for the simulator
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          
          # Determine if we have a workspace or project
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then
            filetype_parameter="workspace"
            file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
          else
            filetype_parameter="project"
            file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
          fi
          
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          
          # Test the scheme for the release configuration
          xcodebuild test -scheme "$scheme" -configuration "$configuration" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
